#!/bin/bash

# This script is meant to simplify merging the public and '-private' conf-mgmt
# files and then running a playbook matching hostname.

# Usage:
#   cd /root/src/conf-mgmt
#   ./apply

set -e
set -u

umask 077

einfo() {
    echo "[INFO] >>> $*"
}

eerror() {
    echo "[ERROR] >>> $*" >&2
}

edie() {
    eerror "$*"
    exit 1
}

setup_and_load_venv() {
    if ! [ -d "${venv_dir}" ] || ! cmp "${work_dir}/requirements.txt" "${venv_dir}/requirements.txt"; then
        einfo 'Setting up new virtualenv ...'
        rm -rf "${venv_dir}"
        mkdir -p "${venv_dir}"
        virtualenv "${venv_dir}"
        . "${venv_dir}/bin/activate"
        pip install -r "${work_dir}/requirements.txt"
        cp "${work_dir}/requirements.txt" "${venv_dir}/requirements.txt"
    else
        einfo 'Loading virtualenv ...'
        . "${venv_dir}/bin/activate"
    fi
}

merge_with_private () {
    test -d "${public_dir}"
    einfo "Merging into ${merged_dir} ..."
    rm -rf "${merged_dir}"
    mkdir "${merged_dir}"
    cp -nsr --preserve=mode,ownership "${public_dir}"/* "${merged_dir}"/
    if [ -d "${private_dir}" ]; then
        cp -nsr --preserve=mode,ownership "${private_dir}"/* "${merged_dir}"/
    fi
}

apply_playbook() {
    einfo "Running ${ansible_playbook} playbook ..."
    cd "${merged_dir}"
    if [ -f "${ansible_playbook}" ]; then
        ./"${ansible_playbook}" "$@"
    else
        edie "Missing playbook ${ansible_playbook}."
    fi
}

trap 'eerror "Error in $0 on line ${LINENO}."' ERR

if [ "${FORCE_ANSIBLE_PLAYBOOK:-}" ]; then
    ansible_playbook="${FORCE_ANSIBLE_PLAYBOOK}"
else
    HOSTNAME="$(hostname)"
    # localhost.yml is just an example, never to be executed as-is.
    if [ "${HOSTNAME}" == 'localhost' ]; then
        edie "Your hostname is set to 'localhost'. Change it to a proper one before running this script."
    fi
    ansible_playbook="${HOSTNAME}.yml"
fi

if [ "${SSH_CLIENT:-}" ] && ! [ "${TMUX:-}" ]; then
    edie "Running over ssh and without tmux. Things may end up bad. Run under tmux."
fi

script_path="$(readlink -f "$0")"
work_dir="${script_path%/*}"

script_dir_name="${work_dir##*/}"

public_dir="${work_dir}"
private_dir="${work_dir}/../${script_dir_name}-private"
merged_dir="$(mktemp -d -t conf-mgmt-merged.XXXXX)"

venv_dir="${HOME}/src/conf-mgmt-venv"

if [ -d "${work_dir}/logs" ]; then
    export ANSIBLE_LOG_PATH="${work_dir}/logs/$(date '+%Y-%m-%d_%H-%M-%S').log"
fi

merge_with_private

setup_and_load_venv

apply_playbook

einfo 'Cleaning merged directory ...'
rm -rf "${merged_dir}"
